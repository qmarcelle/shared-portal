// app/(protected)/(common)/member/dashboard/page.tsx
import { getProfile } from '@/app/actions/member/getProfile';
import { getClaims } from '@/app/actions/claims/getClaims';
import { getBenefits } from '@/app/actions/benefits/getBenefits';
import { ProfileCard } from './components/ProfileCard';
import { ClaimsList } from './components/ClaimsList';
import { BenefitsSummary } from './components/BenefitsSummary';
import { Suspense } from 'react';
import { ErrorBoundary } from '@/components/ErrorBoundary';

export default async function MemberDashboardPage() {
  // Get data using server actions
  // These will be run in parallel and streamed to the client as they complete
  return (
    <div className="grid grid-cols-1 md:grid-cols-2 gap-6 p-4">
      <ErrorBoundary fallback={<div>Error loading profile</div>}>
        <Suspense fallback={<div>Loading profile...</div>}>
          <ProfileSection />
        </Suspense>
      </ErrorBoundary>
      
      <ErrorBoundary fallback={<div>Error loading benefits</div>}>
        <Suspense fallback={<div>Loading benefits summary...</div>}>
          <BenefitsSection />
        </Suspense>
      </ErrorBoundary>
      
      <ErrorBoundary fallback={<div>Error loading claims</div>}>
        <Suspense fallback={<div>Loading recent claims...</div>}>
          <ClaimsSection />
        </Suspense>
      </ErrorBoundary>
    </div>
  );
}

// Separated into component functions to take advantage of React's streaming
async function ProfileSection() {
  const profile = await getProfile();
  return <ProfileCard profile={profile} />;
}

async function BenefitsSection() {
  const benefits = await getBenefits();
  return <BenefitsSummary benefits={benefits} />;
}

async function ClaimsSection() {
  const claims = await getClaims({ limit: 5 });
  return <ClaimsList claims={claims} />;
}
