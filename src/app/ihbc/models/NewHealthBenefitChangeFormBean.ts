import { MedicalPlanDetail } from './service_responses/MedicalPlanDetail';
import { PersonInformation } from './service_responses/PersonInformation';

export interface NewHealthBenefitChangeFormBean {
  appID: string;
  returnPage: string;
  returnPages: string[];
  currentPage: string;
  editMode: boolean;
  groupId: string;
  effectiveDate: string;
  benefitChangeEventDate: string;
  effectiveDateType: string;
  SEPContinue: string;
  SEPReason: string;
  chngPolicy: boolean;
  chngDependents: boolean;
  termDependents: boolean;
  chngBenefits: boolean;
  chngPInfo: boolean;
  SEPset: boolean;
  chngName: boolean;
  chngAddress: boolean;
  chngPNum: boolean;
  chngEmail: boolean;
  chngTobUse: boolean;
  lastName: string;
  firstName: string;
  MI: string;
  rforChng: string;
  chngResidence: boolean;
  chngMailing: boolean;
  chngBilling: boolean;
  rStreet: string;
  rCity: string;
  rState: string;
  rZip: string;
  rCounty: string;
  mStreet: string;
  mCity: string;
  mState: string;
  mZip: string;
  bStreet: string;
  bCity: string;
  bState: string;
  bZip: string;
  firstCodePh: string;
  secondCodePh: string;
  thirdCodePh: string;
  emailAddress: string;
  primTobUse: string;
  spouseTobUse: string;
  termApplicant: boolean;
  cancelMedical: boolean;
  cancelDental: boolean;
  cancelVision: boolean;
  termEffDate: string;
  rsnTermination: string;
  rsnTxt: string;
  cancelEffDate: string;
  rsnMedCancel: string;
  keepDentalVision: boolean;
  cancelDentalDt: string;
  rsnDenCancel: string;
  cancelVisionDt: string;
  rsnVisionCancel: string;
  addSpouse: boolean;
  addDependent: boolean;
  removeSpouse: boolean;
  removeDependent: boolean;
  spouse: PersonInformation;
  dependentList: PersonInformation[];
  addDependentsSize: number;
  remSpouse: PersonInformation;
  remDependentList: PersonInformation[];
  remDependentSize: number;
  benefitsZip: string;
  benefitsCounty: string;
  coverList: PersonInformation[];
  coverListSize: number;
  medPlanList: MedicalPlanDetail[];
  selectPlan: string;
  benefitNetwork: string;
  benefitPlan: string;
  medicalRate: string;
  medicalSBC: string;
  dentalPlanList: MedicalPlanDetail[];
  selectDentalPlan: string;
  dentalPlan: string;
  dentalRate: string;
  dentalSBC: string;
  attested: boolean;
  visionPlanList: MedicalPlanDetail[];
  selectVisionPlan: string;
  visionPlan: string;
  visionRate: string;
  visionSBC: string;
  medicalEnrolled: boolean;
  dentalVisionEnrolled: boolean;
  currentMedicalPlan: MedicalPlanDetail;
  currentDentalPlan: MedicalPlanDetail;
  currentVisionPlan: MedicalPlanDetail;
  medicalAvailable: boolean;
  dentalAvailable: boolean;
  visionAvailable: boolean;
  benPlans: string[];
}
