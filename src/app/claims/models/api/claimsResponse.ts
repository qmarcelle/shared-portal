export type ClaimsResponse = {
  claims: Claim[];
};

export type Claim = {
  claimBenefitAmt: number;
  claimCOBAmt: number;
  claimCoInsAmt: number;
  claimCopayAmt: number;
  claimDeductibleAmt: number;
  claimHRAIndicator: string;
  claimHighServiceDate: number;
  claimId: string;
  relatedClaimId: string;
  claimIdAdjustedFrom: string;
  claimIdAdjustedTo: string;
  claimIdCreatedFrom: string;
  claimLowServiceDate: number;
  claimNonCoveredAmt: number;
  networkSavings: number;
  claimPaidAmt: number;
  claimPaidDate: number;
  claimPatientOweAmt: number;
  claimRecievedDate: number;
  claimStatusCode: string;
  claimStatusDescription: string;
  claimSubType: string;
  claimTotalChargeAmt: number;
  claimType: string;
  hraClaimPaidAmount: number;
  bcbstPaysYou: number;
  memberCk: number;
  providerId: string;
  providerName: string;
  providerSpecialty: string;
  cryptedKeyForEOB: string;
  networkID: string;
  networkSummary: string;
  tierDescription: string;
  tierId: string;
  tierPrefix: string;
  accountNumber: number;
  totalAllowedAmt: number;
  providerBillingTIN: string;
  payToProviderAddress1: string;
  payToProviderCity: string;
  payToProviderState: string;
  payToProviderZip: string;
  patientAccNo: string;
  vndAmtPaid: number;
  providerType: string;
  eobInd: string;
  memberSuffix: number;
  claimHighServiceCalendarDate: string;
  claimLowServiceCalendarDate: string;
  claimPaidCalendarDate: string;
  claimReceivedCalendarDate: string;
  bcbstpaysYou: number;
  claimNonCoveredDescShortText: string;
  claimNonCoveredDescLongText: string;
  placeOfServiceCode?: string;
  revenueCode?: string;
  typeOfService?: string;
  translatedDiagnosisCode?: string;
  ndcCode?: string;
  diagnosisCode?: string;
  diagnosisType?: string;
  procedureCode?: string;
  procedureType?: string;
};

export type HlthBenefitClaim = {
  claimBenefitAmt: string;
  claimCOBAmt: string;
  claimCoInsAmt: string;
  claimCopayAmt: string;
  claimDeductibleAmt: string;
  claimHRAIndicator: string;
  claimHighServiceDate: string;
  claimId: string;
  relatedClaimId: string;
  claimIdAdjustedFrom: string;
  claimIdAdjustedTo: string;
  claimIdCreatedFrom: string;
  claimLowServiceDate: string;
  claimNonCoveredAmt: string;
  networkSavings: string;
  claimPaidAmt: string;
  claimPaidDate: string;
  claimPatientOweAmt: string;
  claimRecievedDate: string;
  claimStatusCode: string;
  claimStatusDescription: string;
  claimSubType: string;
  claimTotalChargeAmt: string;
  claimType: string;
  hraClaimPaidAmount: string;
  bcbstPaysYou: string;
  memberCk: string;
  providerId: string;
  providerName: string;
  providerSpecialty: string;
  cryptedKeyForEOB: string;
  networkID: string;
  networkSummary: string;
  tierDescription: string;
  tierId: string;
  tierPrefix: string;
  accountNumber: string;
  totalAllowedAmt: string;
  providerBillingTIN: string;
  payToProviderAddress1: string;
  payToProviderCity: string;
  payToProviderState: string;
  payToProviderZip: string;
  patientAccNo: string;
  vndAmtPaid: number;
  providerType: string;
  eobInd: string;
  memberSuffix: string;
  claimHighServiceCalendarDate: string;
  claimLowServiceCalendarDate: string;
  claimPaidCalendarDate: string;
  claimReceivedCalendarDate: string;
  bcbstpaysYou: string;
  placeOfServiceCode?: string;
  revenueCode?: string;
  typeOfService?: string;
  translatedDiagnosisCode?: string;
  ndcCode?: string;
  diagnosisCode?: string;
  diagnosisType?: string;
  procedureCode?: string;
  procedureType?: string;
};

export type ClaimDetailService = {
  srvLineItemSeq: number;
  srvLineProcCode: string;
  modifier: string;
  srvLineDesc: string;
  srvLineProcDetail: string;
  srvcTotalChargeAmt: number;
  srvcPatientOwe: number;
  allowedAmt: number;
  providerPaidAmount: number;
  claimLowServiceDate: string;
  claimLowServiceCalendarDate: string;
  claimHighServiceDate: string;
  claimHighServiceCalendarDate: string;
  placeOfServiceCode: string;
  revenueCode: string;
  typeOfService: string;
  translatedDiagnosisCode: string;
  ndcCode: string;
  diagnosisCode: string;
  diagnosisType: string;
  procedureCode: string;
  procedureType: string;
  providerSpecialityCode: string;
};

export type ClaimDetailResponse = {
  claim: Claim;
};

export type ClaimDetailServicesResponse = {
  claimDetail: ClaimDetailService[];
};
